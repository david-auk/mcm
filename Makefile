# ----------  OS detection ----------
UNAME_S := $(shell uname -s)
IS_MAC  := $(filter Darwin,$(UNAME_S))
IS_LINUX:= $(filter Linux,$(UNAME_S))

# ----------  Compose file list ----------
COMPOSE_FILES = -f docker-compose.yml

# ----------  Targets ----------
.PHONY: setup up down

setup:
	@if [ ! -f .env ]; then \
		echo "Enter the port number MCM should run at (default: 8080):"; \
		read FRONTEND_PORT; \
		FRONTEND_PORT=$${FRONTEND_PORT:-8080}; \
		echo "Enter MCM default user password (default: autogenerated):"; \
		read FRONTEND_DEFAULT_USER_PASSWORD; \
		FRONTEND_DEFAULT_USER_PASSWORD=$${FRONTEND_DEFAULT_USER_PASSWORD:-$$(openssl rand -base64 32)}; \
		FRONTEND_DEFAULT_USERNAME=admin; \
		DB_PASSWORD=$$(openssl rand -base64 32); \
		DB_NAME=mcm_db; \
		DB_USER=mcm_db_user; \
		{ \
		  echo "# Custom environment variables for MCM"; \
		  echo ""; \
		  echo "# Front-end variables:"; \
		  echo "FRONTEND_PORT=$$FRONTEND_PORT"; \
		  echo "FRONTEND_DEFAULT_USER_PASSWORD=\"$$FRONTEND_DEFAULT_USER_PASSWORD\" # NOTE: If changed the db_volume must be deleted"; \
		  echo ""; \
		  echo "# Database variables:"; \
		  echo "DB_NAME=\"$$DB_NAME\""; \
		  echo "DB_USER=\"$$DB_USER\""; \
		  echo "DB_PASSWORD=\"$$DB_PASSWORD\""; \
		  if [ $$IS_MAC ]; then \
		    echo ""; \
      		echo "# Suppress OpenJDK 64-Bit Server VM warning: Unable to get SVE vector length on this system"; \
      		echo "JAVA_TOOL_OPTIONS=\"-XX:UseSVE=0\""; \
      	  fi; \
		} > .env; \
		echo ""; \
		echo "Created .env."; \
		echo "Once running, browse to http://localhost:$$FRONTEND_PORT"; \
		echo "Login → user: $$FRONTEND_DEFAULT_USERNAME | pwd: $$FRONTEND_DEFAULT_USER_PASSWORD"; \
	else \
		echo ".env exists – skipping."; \
	fi

# ----------  Colima helpers (macOS only) ----------
ifeq ($(IS_MAC),Darwin)
define ensure_colima
	@if ! command -v colima >/dev/null 2>&1; then \
		echo " ❌  Colima not found. Install it first:  brew install colima docker"; \
		exit 1; \
	fi
	@if ! colima status &>/dev/null ; then \
		echo " ▶️  Starting Colima in bridged mode (first run may take a minute)…"; \
		colima start --network-address; \
	fi
	@echo " ✅  Colima is running."
endef
define stop_colima
	@if colima status &>/dev/null; then \
		echo "Stopping Colima..."; \
		colima stop; \
	fi
endef
endif

up: setup
	$(if $(IS_MAC),$(call ensure_colima))
	docker compose $(COMPOSE_FILES) --env-file .env up -d

down:
	docker compose $(COMPOSE_FILES) --env-file .env down
	$(if $(IS_MAC),$(call stop_colima))