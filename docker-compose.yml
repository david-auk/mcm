services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    # keep this binding so the DB is only reachable on the host’s loopback
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: backend
      args:
        JAVA_TOOL_OPTIONS: ${JAVA_TOOL_OPTIONS:-}
    container_name: mcm_backend

    # ← host‐network mode: your backend and any game‐server children now
    #    bind directly on the host (or Colima VM) NIC, ports 8080 & 2000–4000
    network_mode: host

    # no ports: / no expose
    depends_on:
      db:
        condition: service_healthy
    #user: "1000:1000"
    volumes:
      - ./backend:/app
    #  - ./server_instances:/home/gradle/server_instances
    environment:
      DEFAULT_USER_PASSWORD: ${FRONTEND_DEFAULT_USER_PASSWORD}
      # point to localhost since both DB + backend share the host network
      DATASOURCE_URL: jdbc:postgresql://localhost:5432/${DB_NAME}
      DATASOURCE_USERNAME: ${DB_USER}
      DATASOURCE_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: mcm_frontend
    build:
      context: frontend
      target: ${ENVIRONMENT-development}
    # still map the Vite port into localhost so you can browse at localhost:<FRONTEND_PORT>
    # ports:
    #   - "127.0.0.1:${FRONTEND_PORT:-8080}:${FRONTEND_PORT:-8080}"
    network_mode: host
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
    environment:
      REACT_APP_USING_DOCKER: "true"
      VITE_PORT: ${FRONTEND_PORT}
      VITE_BACKEND_URL: http://localhost:8080
      NODE_ENV: development
    depends_on:
      backend:
        condition: service_healthy

volumes:
  db_data: